CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(255),
                           NEW_TITLE VARCHAR(255),
                           OLD_PUBYEAR INT(11),
                           NEW_PUBYEAR INT(11),
                           OLD_BESTSELLER BOOLEAN,
                           NEW_BESTSELLER BOOLEAN,
                           PRIMARY KEY (EVENT_ID)
);

DELIMITER $$
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$
DELIMITER ;


INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR)   -- test BOOKS_AUD
VALUES (6, 'Test title', '2021');
COMMIT;

DELETE FROM BOOKS WHERE BOOK_ID = 6;
COMMIT;

UPDATE BOOKS SET TITLE = 'Updated title'
WHERE BOOK_ID = 6;
COMMIT;

SELECT * FROM BOOKS;

SELECT * FROM BOOKS_AUD;




CREATE TABLE READERS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             READER_ID INT(11) NOT NULL,
                             OLD_FIRSTNAME VARCHAR(255),
                             NEW_FIRSTNAME VARCHAR(255),
                             OLD_LASTNAME VARCHAR(255),
                             NEW_LASTNAME VARCHAR(255),
                             OLD_PESELID VARCHAR(255),
                             NEW_PESELID VARCHAR(255),
                             PRIMARY KEY (EVENT_ID)
);

DELIMITER $$
CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$
DELIMITER ;


DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END $$
DELIMITER ;


INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID)   -- test
VALUES (6, 'Pan test', 'test', '21070798765');
COMMIT;

DELETE FROM READERS WHERE READER_ID = 6;
COMMIT;

UPDATE READERS SET PESELID = '12345678901'
WHERE READER_ID = 6;
COMMIT;

SELECT * FROM READERS;

SELECT * FROM READERS_AUD;